[{"id":"49f18bc6.de5c74","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"91483dfc.11736","type":"split","z":"49f18bc6.de5c74","name":"","splt":"\\n","x":470,"y":80,"wires":[["eb680103.9d5d1"]]},{"id":"fbe46b18.1bbd58","type":"daemon","z":"49f18bc6.de5c74","name":"Connect to Sensortags","command":"sudo","args":"python -u /home/pi/sensortagcollector.py -o -d 54:6C:0E:53:03:B1=sensor1 54:6C:0E:53:11:C1=sensor2 -m lightmeter IRtemperature barometer","autorun":true,"cr":false,"redo":true,"op":"string","x":406.70001220703125,"y":187,"wires":[["91483dfc.11736"],[],[]]},{"id":"eb680103.9d5d1","type":"function","z":"49f18bc6.de5c74","name":"JSON String to Object","func":"// reject empty messages\nif ( msg.payload.trim().length === 0 ) {\n return null;\n}\n\n// This try/catch seems to be needed because\n// occasionally a malformed JSON string is received\n// from the python script.\n// I couldn't see anything wrong with the strings that raise\n// exceptions, but this stops the errors causing\n// irritating problems.\n// UPDATE since adding the split node and the test for\n// zero length (after trimming) above, I haven't\n// seen the json conversion fail. Leaving it here just in case\n\ntry {\n msg.payload= JSON.parse(msg.payload.trim());\n} catch(err) {\n node.error(\"Couldn't convert JSON to object:\"+msg.payload);\n return null;\n}\n\n// Set the data to have come from the device's assigned name\n// The IoT output node must assert the device\n// type (along with the login credentials for the Pi gateway)!\nmsg.deviceId = msg.payload.devicename;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":653.7000274658203,"y":81,"wires":[["e96a89f3.e46c98","d3255872.e9aa38"]]},{"id":"e96a89f3.e46c98","type":"debug","z":"49f18bc6.de5c74","name":"","active":true,"console":"false","complete":"payload","x":720.6999664306641,"y":188,"wires":[]},{"id":"d3255872.e9aa38","type":"mqtt out","z":"49f18bc6.de5c74","name":"","topic":"sensortag","qos":"","retain":"","broker":"1fdfb786.e6fc88","x":920,"y":100,"wires":[]},{"id":"6150d70d.2edcf8","type":"wiotp out","z":"49f18bc6.de5c74","authType":"g","qs":"false","qsDeviceId":"","deviceKey":"78e84732.aa96b8","deviceType":"SensortagType","deviceId":"","event":"event","format":"json","qos":"","name":"","x":810,"y":320,"wires":[]},{"id":"7d038bf8.2ed8c4","type":"mqtt in","z":"49f18bc6.de5c74","name":"","topic":"sensortag","qos":"2","datatype":"json","broker":"1fdfb786.e6fc88","x":560,"y":320,"wires":[["6150d70d.2edcf8"]]},{"id":"1fdfb786.e6fc88","type":"mqtt-broker","z":"","name":"","broker":"raspberrypi","port":"8883","tls":"bbf2afb.b8d235","clientid":"","usetls":true,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"78e84732.aa96b8","type":"wiotp-credentials","z":"","name":"","org":"sr7gke","serverName":"sr7gke.messaging.internetofthings.ibmcloud.com","devType":"gwtype","devId":"Gateway01","keepalive":"60","cleansession":true,"tls":"b65b80d7.8b79d","usetls":false},{"id":"bbf2afb.b8d235","type":"tls-config","z":"","name":"","cert":"","key":"","ca":"","certname":"server.crt","keyname":"server.key","caname":"ca.crt","servername":"raspberrypi","verifyservercert":false},{"id":"b65b80d7.8b79d","type":"tls-config","z":"","name":"","cert":"","key":"","ca":"","certname":"client.csr","keyname":"client.key","caname":"rootCA.pem","servername":"","verifyservercert":false}]